{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/franco/trybe-exercises/bloco_12/12_2/forms/src/Froms.js\";\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      estadoFavorito: '',\n      meConteAlgo: '',\n      idade: '',\n      vaiComparecer: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Criando formulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Teste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Diga qual o seu Estado favorito! De React ou do Brasil, voc\\xEA decide! =)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"estadoFavorito\",\n              value: this.state.estadoFavorito,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Me conte alguma coisa! =)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"meConteAlgo\",\n              value: this.state.meConteAlgo,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \"Idade\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"idade\",\n            value: this.state.idade,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \"Vai Comparecer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"vaiComparecer\",\n            value: this.state.vaiComparecer,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form; // Para fixar\n// 1 - Crie um formulário com um campo select , dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado.\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles.\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos . Acrescente um ao seu formulário.\n// 6 - Encapsule alguns dos seus campos num fieldset . Entenda como ele funciona lendo uma documentação .","map":{"version":3,"sources":["/home/franco/trybe-exercises/bloco_12/12_2/forms/src/Froms.js"],"names":["React","Component","Form","constructor","handleChange","bind","state","estadoFavorito","meConteAlgo","idade","vaiComparecer","target","name","value","type","checked","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAGDN,EAAAA,YAAY,CAAC;AAACO,IAAAA;AAAD,GAAD,EAAW;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,MAAjB;AACA,UAAME,KAAK,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA6BH,MAAM,CAACI,OAApC,GAA8CJ,MAAM,CAACE,KAAnE;AAEA,SAAKG,QAAL,CAAc;AACZ,OAACJ,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,kHAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AACE,cAAA,IAAI,EAAC,gBADP;AAEE,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,cAFpB;AAGE,cAAA,QAAQ,EAAE,KAAKH;AAHjB;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAWE;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA,iEAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AACE,cAAA,IAAI,EAAC,aADP;AAEE,cAAA,KAAK,EAAE,KAAKE,KAAL,CAAWE,WAFpB;AAGE,cAAA,QAAQ,EAAE,KAAKJ;AAHjB;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAqBE;AAAA;AAAA;AAAA;AAAA,kBArBF,wBAuBE;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAwBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,KAHpB;AAIE,YAAA,QAAQ,EAAE,KAAKL;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAxBF,eA8BE;AAAA;AAAA;AAAA;AAAA,kBA9BF,iCAgCE;AAAA;AAAA;AAAA;AAAA,kBAhCF,eAiCE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,eAFP;AAGE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWI,aAHpB;AAIE,YAAA,QAAQ,EAAE,KAAKN;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAjCF,eAuCE;AAAA;AAAA;AAAA;AAAA,kBAvCF,eAwCE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiDD;;AA1E0B;;AA6E7B,eAAeF,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      estadoFavorito: '',\n      meConteAlgo: '',\n      idade: '',\n      vaiComparecer: '',\n    };\n  }\n\n\n  handleChange({target}) {\n    const { name } = target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Criando formulario</h1>\n        <form className=\"form\">\n          <fieldset>\n            <legend>Teste</legend>\n            <label>\n              Diga qual o seu Estado favorito! De React ou do Brasil, você decide! =)\n              <br />\n              <textarea \n                name=\"estadoFavorito\"  \n                value={this.state.estadoFavorito} \n                onChange={this.handleChange} \n              />\n            </label>\n            <br />\n            <label>\n              Me conte alguma coisa! =)\n              <br />\n              <textarea \n                name=\"meConteAlgo\"  \n                value={this.state.meConteAlgo} \n                onChange={this.handleChange} \n              />\n            </label>\n            <br />\n            Idade\n            <br />\n            <input\n              type=\"number\"\n              name=\"idade\"\n              value={this.state.idade}\n              onChange={this.handleChange}\n            />\n            <br />\n            Vai Comparecer  \n            <br />\n            <input\n              type=\"checkbox\"\n              name=\"vaiComparecer\"\n              value={this.state.vaiComparecer}\n              onChange={this.handleChange}\n            />\n            <br />\n            <input type=\"file\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n\n// Para fixar\n// 1 - Crie um formulário com um campo select , dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado.\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles.\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos . Acrescente um ao seu formulário.\n// 6 - Encapsule alguns dos seus campos num fieldset . Entenda como ele funciona lendo uma documentação .\n"]},"metadata":{},"sourceType":"module"}