{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/franco/trybe-exercises/bloco_12/12_2/forms/src/Froms.js\";\nimport React, { Component } from 'react';\nimport Estado from './Estado';\nimport MeConteAlgumaCoisa from './MeConteAlgumaCoisa';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      estadoFavorito: '',\n      meConteAlgo: '',\n      idade: '',\n      vaiComparecer: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    // const { value, handleChange } = this.props\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Criando formulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Teste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Estado, {\n            value: this.state.estadoFavorito,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MeConteAlgumaCoisa, {\n            value: this.state.value,\n            handleChange: this.props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), \"Idade\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"idade\",\n            value: this.state.idade,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), \"Vai Comparecer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"vaiComparecer\",\n            value: this.state.vaiComparecer,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form; // Para fixar\n// 1 - Crie um formul√°rio com um campo select , dois inputs de tipo diferente, uma textarea e fa√ßa de um deles um componente controlado, ou seja, elementos do formul√°rio controlados pelo Estado\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado.\n// 3 - Fa√ßa todos os seus elementos componentes do formul√°rio ficarem 100% controlados. Fa√ßa um event handler gen√©rico para lidar com eles.\n// 4 - Acrescente no seu formul√°rio um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n// 5 - Busque na documenta√ß√£o de React acerca de formul√°rios (primeiro link da se√ß√£o de Recursos Adicionais!) como se deve adicionar um input para arquivos . Acrescente um ao seu formul√°rio.\n// 6 - Encapsule alguns dos seus campos num fieldset . Entenda como ele funciona lendo uma documenta√ß√£o .\n// 7 - Fa√ßa dois de seus campos serem componentes filhos do seu componente de formul√°rio. Garanta que seu estado ainda pertence ao componente pai.\n// 8 - Fa√ßa duas valida√ß√µes em um desses componentes filhos e uma em um outro.\n// 9 - Crie, no estado do componente pai, um campo formularioComErros que deve ser true caso algum desses componentes tenha erros e false caso contr√°rio.\n// ü¶ú Dica: Se algum dos componentes transmitir true para a fun√ß√£o que far√° o handle dos erros, qual valor deve ser armazenado no Estado ?","map":{"version":3,"sources":["/home/franco/trybe-exercises/bloco_12/12_2/forms/src/Froms.js"],"names":["React","Component","Estado","MeConteAlgumaCoisa","Form","constructor","handleChange","bind","state","estadoFavorito","meConteAlgo","idade","vaiComparecer","target","name","value","type","checked","setState","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAGDN,EAAAA,YAAY,CAAC;AAACO,IAAAA;AAAD,GAAD,EAAW;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,MAAjB;AACA,UAAME,KAAK,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA6BH,MAAM,CAACI,OAApC,GAA8CJ,MAAM,CAACE,KAAnE;AAEA,SAAKG,QAAL,CAAc;AACZ,OAACJ,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,cAA1B;AAA0C,YAAA,YAAY,EAAE,KAAKH;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,kBAAD;AAAoB,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,KAAtC;AAA6C,YAAA,YAAY,EAAE,KAAKK,KAAL,CAAWd;AAAtE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,wBAOE;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,KAHpB;AAIE,YAAA,QAAQ,EAAE,KAAKL;AAJjB;AAAA;AAAA;AAAA;AAAA,kBARF,eAcE;AAAA;AAAA;AAAA;AAAA,kBAdF,iCAgBE;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,eAFP;AAGE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWI,aAHpB;AAIE,YAAA,QAAQ,EAAE,KAAKN;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAuBE;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAwBE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AA3D0B;;AA8D7B,eAAeF,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport Estado from './Estado'\nimport MeConteAlgumaCoisa from './MeConteAlgumaCoisa'\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      estadoFavorito: '',\n      meConteAlgo: '',\n      idade: '',\n      vaiComparecer: '',\n    };\n  }\n\n\n  handleChange({target}) {\n    const { name } = target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    // const { value, handleChange } = this.props\n    return (\n      <div>\n        <h1>Criando formulario</h1>\n        <form className=\"form\">\n          <fieldset>\n            <legend>Teste</legend>\n            <Estado value={this.state.estadoFavorito} handleChange={this.handleChange} />\n            <br />\n            <MeConteAlgumaCoisa value={this.state.value} handleChange={this.props.handleChange}/>\n            <br />\n            Idade\n            <br />\n            <input\n              type=\"number\"\n              name=\"idade\"\n              value={this.state.idade}\n              onChange={this.handleChange}\n            />\n            <br />\n            Vai Comparecer  \n            <br />\n            <input\n              type=\"checkbox\"\n              name=\"vaiComparecer\"\n              value={this.state.vaiComparecer}\n              onChange={this.handleChange}\n            />\n            <br />\n            <input type=\"file\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n\n// Para fixar\n// 1 - Crie um formul√°rio com um campo select , dois inputs de tipo diferente, uma textarea e fa√ßa de um deles um componente controlado, ou seja, elementos do formul√°rio controlados pelo Estado\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado.\n// 3 - Fa√ßa todos os seus elementos componentes do formul√°rio ficarem 100% controlados. Fa√ßa um event handler gen√©rico para lidar com eles.\n// 4 - Acrescente no seu formul√°rio um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n// 5 - Busque na documenta√ß√£o de React acerca de formul√°rios (primeiro link da se√ß√£o de Recursos Adicionais!) como se deve adicionar um input para arquivos . Acrescente um ao seu formul√°rio.\n// 6 - Encapsule alguns dos seus campos num fieldset . Entenda como ele funciona lendo uma documenta√ß√£o .\n// 7 - Fa√ßa dois de seus campos serem componentes filhos do seu componente de formul√°rio. Garanta que seu estado ainda pertence ao componente pai.\n// 8 - Fa√ßa duas valida√ß√µes em um desses componentes filhos e uma em um outro.\n// 9 - Crie, no estado do componente pai, um campo formularioComErros que deve ser true caso algum desses componentes tenha erros e false caso contr√°rio.\n// ü¶ú Dica: Se algum dos componentes transmitir true para a fun√ß√£o que far√° o handle dos erros, qual valor deve ser armazenado no Estado ?\n"]},"metadata":{},"sourceType":"module"}